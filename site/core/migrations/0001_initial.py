# Generated by Django 3.2.7 on 2021-09-18 00:20

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=40, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'O nome do usuário só pode conter letras digitos ou os seguintes caraters: @/./+/-/_', 'invalid')], verbose_name='Apelido')),
                ('nome', models.CharField(max_length=200)),
                ('cpf', models.CharField(max_length=15, unique=True)),
                ('data_nasc', models.DateField()),
                ('endereco', models.CharField(max_length=200)),
                ('bairro', models.CharField(max_length=200)),
                ('cidade', models.CharField(max_length=200)),
                ('numero', models.IntegerField()),
                ('uf', models.CharField(max_length=2)),
                ('cep', models.IntegerField()),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Esta ativo?')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='equipe')),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criacao')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
